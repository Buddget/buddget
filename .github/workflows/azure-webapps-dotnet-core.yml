name: Build, Test, Analyze and Deploy ASP.NET Core app

env:
  AZURE_WEBAPP_NAME: buddget         
  AZURE_WEBAPP_PACKAGE_PATH: '.'
  DOTNET_VERSION: '9.0.x'  
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 9.0 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          include-prerelease: true

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test with coverage
        run: dotnet test --configuration Release --collect:"XPlat Code Coverage" --results-directory ./TestResults

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: ./TestResults

      - name: Publish app
        run: dotnet publish ./BuddgetWeb/BuddgetWeb.csproj -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload app artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-artifact
          path: ${{env.DOTNET_ROOT}}/myapp

  sonarcloud:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: ${{ !cancelled() }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET 9.0 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          run: dotnet publish ./BuddgetWeb/BuddgetWeb.csproj -c Release -o ${{env.DOTNET_ROOT}}/myapp


      - name: Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Begin SonarCloud analysis
        run: |
          dotnet sonarscanner begin \
            /o:"buddget" \
            /k:"Buddget_buddget" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Build for SonarCloud
        run: dotnet build --configuration Release

      - name: End SonarCloud analysis
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build-and-test
    environment:
      name: 'Development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    steps:
      - name: Download app artifact
        uses: actions/download-artifact@v4
        with:
          name: app-artifact

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
