@page
@model BuddgetWeb.Areas.Identity.Pages.Account.Manage.DeleteCategoryModel
@{
    ViewData["Title"] = "Delete Category";
}

<h1>@ViewData["Title"]</h1>

<div class="container mt-4">
    <h2 class="text-center mb-4">Delete Category</h2>
    <div class="row justify-content-center">
        <div class="col-12 col-md-6 col-lg-4">
            <form id="deleteCategoryForm" class="floating-form">
                @Html.AntiForgeryToken()
                <h2 class="text-center mb-4">Are you sure you want to delete this category?</h2>
                <div class="text-center">
                    <button type="button" id="confirmDeleteButton" class="btn btn-danger">Delete</button>
                    <button type="button" id="cancelDeleteButton" class="btn btn-secondary">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal" id="deleteConfirmationModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Deletion</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the category "<span id="categoryToDelete"></span>"? This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteModalButton">Delete</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const deleteModal = document.getElementById('deleteConfirmationModal');
        const confirmDeleteButton = document.getElementById('confirmDeleteButton');
        const cancelDeleteButton = document.getElementById('cancelDeleteButton');
        const confirmDeleteModalButton = document.getElementById('confirmDeleteModalButton');

        function showModal(modal) {
            modal.style.display = 'block';
        }

        function hideModal(modal) {
            modal.style.display = 'none';
        }

        confirmDeleteButton.addEventListener('click', function () {
            showModal(deleteModal);
        });

        cancelDeleteButton.addEventListener('click', function () {
            hideModal(deleteModal);
        });

        document.querySelector('#deleteConfirmationModal .close').addEventListener('click', function () {
            hideModal(deleteModal);
        });

        confirmDeleteModalButton.addEventListener('click', async function () {
            // Add your delete logic here
            hideModal(deleteModal);
        });

        window.addEventListener('click', function (event) {
            if (event.target === deleteModal) {
                hideModal(deleteModal);
            }
        });
    });
</script>

<style>
    .floating-form {
        background: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
        text-align: center;
    }

    .modal {
        display: none;
        position: fixed;
        z-index: 1050;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.5);
    }

    .modal-dialog {
        position: relative;
        width: auto;
        margin: 10% auto;
        max-width: 500px;
    }

    .modal-content {
        position: relative;
        background-color: #fff;
        background-clip: padding-box;
        border: 1px solid rgba(0, 0, 0, 0.2);
        border-radius: 0.3rem;
        outline: 0;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);
    }

    .modal-header {
        display: flex;
        align-items: flex-start;
        justify-content: space-between;
        padding: 1rem;
        border-bottom: 1px solid #dee2e6;
        border-top-left-radius: 0.3rem;
        border-top-right-radius: 0.3rem;
    }

    .modal-title {
        margin-bottom: 0;
        line-height: 1.5;
    }

    .close {
        padding: 1rem;
        margin: -1rem -1rem -1rem auto;
        cursor: pointer;
        background: transparent;
        border: 0;
        font-size: 1.5rem;
        font-weight: 700;
        line-height: 1;
        color: #000;
        text-shadow: 0 1px 0 #fff;
        opacity: 0.5;
    }

    .close:hover {
        opacity: 1;
    }

    .modal-body {
        position: relative;
        padding: 1rem;
    }

    .modal-footer {
        display: flex;
        align-items: center;
        justify-content: flex-end;
        padding: 1rem;
        border-top: 1px solid #dee2e6;
    }

    .btn-secondary {
        background-color: #6c757d;
        border: none;
        color: white;
        transition: background 0.3s ease, transform 0.2s ease;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        line-height: 1.5;
        border-radius: 0.25rem;
        margin-left: 0.25rem;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
        transform: scale(1.05);
    }

    .btn-danger {
        background-color: #dc3545;
        border: none;
        color: white;
        transition: background 0.3s ease, transform 0.2s ease;
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
        line-height: 1.5;
        border-radius: 0.25rem;
        margin-left: 0.25rem;
    }

    .btn-danger:hover {
        background-color: #c82333;
        transform: scale(1.05);
    }
</style>
